{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Podobear-NodeJS-CRUD-REST-API",
    "description": "A simple API for Podobear, a podometer application on mobile.",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "",
  "tags": [
    {
      "name": "Users"
    },
    {
      "name": "Datas"
    }
  ],
  "paths": {
    "/cats": {
      "get": {
        "tags": [
          "Datas"
        ],
        "summary": "Get all cats in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Cats"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Datas"
        ],
        "summary": "Create a new cat in system",
        "requestBody": {
          "description": "Cat Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Cat"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/cats/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the cat that we want to match",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Datas"
        ],
        "summary": "Get cat with given ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Cat with id",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Cat"
            }
          },
          "404": {
            "description": "Failed. Cat not found."
          }
        }
      },
      "put": {
        "summary": "Update cat with given ID",
        "tags": [
          "Datas"
        ],
        "requestBody": {
          "description": "Cat Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Cat"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Cat with new values of properties",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Cat"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Cat not found."
          }
        }
      },
      "delete": {
        "summary": "Delete cat with given ID",
        "tags": [
          "Datas"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Delete Cat with id",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "404": {
            "description": "Failed. Cat not found."
          }
        }
      }
    }
  },
  "definitions": {
    "Users": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "id_device": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "height": {
          "type": "string"
        },
        "weight": {
          "type": "string"
        },
        "birthday": {
          "type": "date"
        },
        "created_at": {
          "type": "date"
        },
        "updated_at": {
          "type": "date"
        }
      }
    },
    "Datas": {
      "properties": {
        "_id": {
          "type": "string"
        },
        "x": {
          "type": "string"
        },
        "y": {
          "type": "string"
        },
        "z": {
          "type": "string"
        },
        "positionX": {
          "type": "string"
        },
        "positionY": {
          "type": "string"
        },
        "positionZ": {
          "type": "string"
        },
        "accX": {
          "type": "string"
        },
        "accY": {
          "type": "string"
        },
        "accZ": {
          "type": "string"
        },
        "steps": {
          "type": "string"
        },
        "accuracy": {
          "type": "string"
        },
        "long": {
          "type": "string"
        },
        "lat": {
          "type": "string"
        },
        "speed": {
          "type": "string"
        },
        "id_device": {
          "type": "string"
        },
        "timestamp": {
          "type": "date"
        },
        "created_at": {
          "type": "date"
        }
      }
    }
  }
}